// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// seir.cpp
cpp11::sexp dust_seir_capabilities();
extern "C" SEXP _seir_dust_seir_capabilities() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seir_capabilities());
  END_CPP11
}
// seir.cpp
cpp11::sexp dust_seir_gpu_info();
extern "C" SEXP _seir_dust_seir_gpu_info() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seir_gpu_info());
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_alloc(cpp11::list r_pars, bool pars_multi, size_t step, cpp11::sexp r_n_particles, size_t n_threads, cpp11::sexp r_seed, bool deterministic, cpp11::sexp gpu_config);
extern "C" SEXP _seir_dust_cpu_seir_alloc(SEXP r_pars, SEXP pars_multi, SEXP step, SEXP r_n_particles, SEXP n_threads, SEXP r_seed, SEXP deterministic, SEXP gpu_config) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_alloc(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<bool>>(pars_multi), cpp11::as_cpp<cpp11::decay_t<size_t>>(step), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_n_particles), cpp11::as_cpp<cpp11::decay_t<size_t>>(n_threads), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_seed), cpp11::as_cpp<cpp11::decay_t<bool>>(deterministic), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(gpu_config)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_run(SEXP ptr, size_t step_end);
extern "C" SEXP _seir_dust_cpu_seir_run(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_run(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<size_t>>(step_end)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_simulate(SEXP ptr, cpp11::sexp step_end);
extern "C" SEXP _seir_dust_cpu_seir_simulate(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_simulate(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_end)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_set_index(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seir_set_index(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_set_index(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state);
extern "C" SEXP _seir_dust_cpu_seir_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_update_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_pars), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_state), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_step), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_set_initial_state)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_state(SEXP ptr, SEXP r_index);
extern "C" SEXP _seir_dust_cpu_seir_state(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_index)));
  END_CPP11
}
// seir.cpp
size_t dust_cpu_seir_step(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seir_step(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_step(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seir.cpp
void dust_cpu_seir_reorder(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seir_reorder(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    dust_cpu_seir_reorder(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index));
    return R_NilValue;
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_resample(SEXP ptr, cpp11::doubles r_weights);
extern "C" SEXP _seir_dust_cpu_seir_resample(SEXP ptr, SEXP r_weights) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_resample(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r_weights)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_rng_state(SEXP ptr, bool first_only, bool last_only);
extern "C" SEXP _seir_dust_cpu_seir_rng_state(SEXP ptr, SEXP first_only, SEXP last_only) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(first_only), cpp11::as_cpp<cpp11::decay_t<bool>>(last_only)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_set_rng_state(SEXP ptr, cpp11::raws rng_state);
extern "C" SEXP _seir_dust_cpu_seir_set_rng_state(SEXP ptr, SEXP rng_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_set_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(rng_state)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_set_data(SEXP ptr, cpp11::list data);
extern "C" SEXP _seir_dust_cpu_seir_set_data(SEXP ptr, SEXP data) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_set_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(data)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_compare_data(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seir_compare_data(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_compare_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seir.cpp
SEXP dust_cpu_seir_filter(SEXP ptr, SEXP step_end, bool save_trajectories, cpp11::sexp step_snapshot, cpp11::sexp min_log_likelihood);
extern "C" SEXP _seir_dust_cpu_seir_filter(SEXP ptr, SEXP step_end, SEXP save_trajectories, SEXP step_snapshot, SEXP min_log_likelihood) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_filter(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(step_end), cpp11::as_cpp<cpp11::decay_t<bool>>(save_trajectories), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_snapshot), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(min_log_likelihood)));
  END_CPP11
}
// seir.cpp
void dust_cpu_seir_set_n_threads(SEXP ptr, int n_threads);
extern "C" SEXP _seir_dust_cpu_seir_set_n_threads(SEXP ptr, SEXP n_threads) {
  BEGIN_CPP11
    dust_cpu_seir_set_n_threads(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<int>>(n_threads));
    return R_NilValue;
  END_CPP11
}
// seir.cpp
int dust_cpu_seir_n_state(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seir_n_state(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seir_n_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirdage.cpp
cpp11::sexp dust_seirdage_capabilities();
extern "C" SEXP _seir_dust_seirdage_capabilities() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirdage_capabilities());
  END_CPP11
}
// seirdage.cpp
cpp11::sexp dust_seirdage_gpu_info();
extern "C" SEXP _seir_dust_seirdage_gpu_info() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirdage_gpu_info());
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_alloc(cpp11::list r_pars, bool pars_multi, size_t step, cpp11::sexp r_n_particles, size_t n_threads, cpp11::sexp r_seed, bool deterministic, cpp11::sexp gpu_config);
extern "C" SEXP _seir_dust_cpu_seirdage_alloc(SEXP r_pars, SEXP pars_multi, SEXP step, SEXP r_n_particles, SEXP n_threads, SEXP r_seed, SEXP deterministic, SEXP gpu_config) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_alloc(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<bool>>(pars_multi), cpp11::as_cpp<cpp11::decay_t<size_t>>(step), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_n_particles), cpp11::as_cpp<cpp11::decay_t<size_t>>(n_threads), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_seed), cpp11::as_cpp<cpp11::decay_t<bool>>(deterministic), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(gpu_config)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_run(SEXP ptr, size_t step_end);
extern "C" SEXP _seir_dust_cpu_seirdage_run(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_run(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<size_t>>(step_end)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_simulate(SEXP ptr, cpp11::sexp step_end);
extern "C" SEXP _seir_dust_cpu_seirdage_simulate(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_simulate(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_end)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_set_index(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirdage_set_index(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_set_index(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state);
extern "C" SEXP _seir_dust_cpu_seirdage_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_update_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_pars), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_state), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_step), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_set_initial_state)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_state(SEXP ptr, SEXP r_index);
extern "C" SEXP _seir_dust_cpu_seirdage_state(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_index)));
  END_CPP11
}
// seirdage.cpp
size_t dust_cpu_seirdage_step(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirdage_step(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_step(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirdage.cpp
void dust_cpu_seirdage_reorder(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirdage_reorder(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    dust_cpu_seirdage_reorder(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index));
    return R_NilValue;
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_resample(SEXP ptr, cpp11::doubles r_weights);
extern "C" SEXP _seir_dust_cpu_seirdage_resample(SEXP ptr, SEXP r_weights) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_resample(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r_weights)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_rng_state(SEXP ptr, bool first_only, bool last_only);
extern "C" SEXP _seir_dust_cpu_seirdage_rng_state(SEXP ptr, SEXP first_only, SEXP last_only) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(first_only), cpp11::as_cpp<cpp11::decay_t<bool>>(last_only)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_set_rng_state(SEXP ptr, cpp11::raws rng_state);
extern "C" SEXP _seir_dust_cpu_seirdage_set_rng_state(SEXP ptr, SEXP rng_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_set_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(rng_state)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_set_data(SEXP ptr, cpp11::list data);
extern "C" SEXP _seir_dust_cpu_seirdage_set_data(SEXP ptr, SEXP data) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_set_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(data)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_compare_data(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirdage_compare_data(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_compare_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirdage.cpp
SEXP dust_cpu_seirdage_filter(SEXP ptr, SEXP step_end, bool save_trajectories, cpp11::sexp step_snapshot, cpp11::sexp min_log_likelihood);
extern "C" SEXP _seir_dust_cpu_seirdage_filter(SEXP ptr, SEXP step_end, SEXP save_trajectories, SEXP step_snapshot, SEXP min_log_likelihood) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_filter(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(step_end), cpp11::as_cpp<cpp11::decay_t<bool>>(save_trajectories), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_snapshot), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(min_log_likelihood)));
  END_CPP11
}
// seirdage.cpp
void dust_cpu_seirdage_set_n_threads(SEXP ptr, int n_threads);
extern "C" SEXP _seir_dust_cpu_seirdage_set_n_threads(SEXP ptr, SEXP n_threads) {
  BEGIN_CPP11
    dust_cpu_seirdage_set_n_threads(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<int>>(n_threads));
    return R_NilValue;
  END_CPP11
}
// seirdage.cpp
int dust_cpu_seirdage_n_state(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirdage_n_state(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirdage_n_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdage.cpp
cpp11::sexp dust_seirhdage_capabilities();
extern "C" SEXP _seir_dust_seirhdage_capabilities() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdage_capabilities());
  END_CPP11
}
// seirhdage.cpp
cpp11::sexp dust_seirhdage_gpu_info();
extern "C" SEXP _seir_dust_seirhdage_gpu_info() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdage_gpu_info());
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_alloc(cpp11::list r_pars, bool pars_multi, size_t step, cpp11::sexp r_n_particles, size_t n_threads, cpp11::sexp r_seed, bool deterministic, cpp11::sexp gpu_config);
extern "C" SEXP _seir_dust_cpu_seirhdage_alloc(SEXP r_pars, SEXP pars_multi, SEXP step, SEXP r_n_particles, SEXP n_threads, SEXP r_seed, SEXP deterministic, SEXP gpu_config) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_alloc(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<bool>>(pars_multi), cpp11::as_cpp<cpp11::decay_t<size_t>>(step), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_n_particles), cpp11::as_cpp<cpp11::decay_t<size_t>>(n_threads), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_seed), cpp11::as_cpp<cpp11::decay_t<bool>>(deterministic), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(gpu_config)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_run(SEXP ptr, size_t step_end);
extern "C" SEXP _seir_dust_cpu_seirhdage_run(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_run(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<size_t>>(step_end)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_simulate(SEXP ptr, cpp11::sexp step_end);
extern "C" SEXP _seir_dust_cpu_seirhdage_simulate(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_simulate(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_end)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_set_index(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdage_set_index(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_set_index(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state);
extern "C" SEXP _seir_dust_cpu_seirhdage_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_update_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_pars), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_state), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_step), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_set_initial_state)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_state(SEXP ptr, SEXP r_index);
extern "C" SEXP _seir_dust_cpu_seirhdage_state(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_index)));
  END_CPP11
}
// seirhdage.cpp
size_t dust_cpu_seirhdage_step(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdage_step(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_step(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdage.cpp
void dust_cpu_seirhdage_reorder(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdage_reorder(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    dust_cpu_seirhdage_reorder(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index));
    return R_NilValue;
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_resample(SEXP ptr, cpp11::doubles r_weights);
extern "C" SEXP _seir_dust_cpu_seirhdage_resample(SEXP ptr, SEXP r_weights) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_resample(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r_weights)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_rng_state(SEXP ptr, bool first_only, bool last_only);
extern "C" SEXP _seir_dust_cpu_seirhdage_rng_state(SEXP ptr, SEXP first_only, SEXP last_only) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(first_only), cpp11::as_cpp<cpp11::decay_t<bool>>(last_only)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_set_rng_state(SEXP ptr, cpp11::raws rng_state);
extern "C" SEXP _seir_dust_cpu_seirhdage_set_rng_state(SEXP ptr, SEXP rng_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_set_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(rng_state)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_set_data(SEXP ptr, cpp11::list data);
extern "C" SEXP _seir_dust_cpu_seirhdage_set_data(SEXP ptr, SEXP data) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_set_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(data)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_compare_data(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdage_compare_data(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_compare_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdage.cpp
SEXP dust_cpu_seirhdage_filter(SEXP ptr, SEXP step_end, bool save_trajectories, cpp11::sexp step_snapshot, cpp11::sexp min_log_likelihood);
extern "C" SEXP _seir_dust_cpu_seirhdage_filter(SEXP ptr, SEXP step_end, SEXP save_trajectories, SEXP step_snapshot, SEXP min_log_likelihood) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_filter(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(step_end), cpp11::as_cpp<cpp11::decay_t<bool>>(save_trajectories), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_snapshot), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(min_log_likelihood)));
  END_CPP11
}
// seirhdage.cpp
void dust_cpu_seirhdage_set_n_threads(SEXP ptr, int n_threads);
extern "C" SEXP _seir_dust_cpu_seirhdage_set_n_threads(SEXP ptr, SEXP n_threads) {
  BEGIN_CPP11
    dust_cpu_seirhdage_set_n_threads(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<int>>(n_threads));
    return R_NilValue;
  END_CPP11
}
// seirhdage.cpp
int dust_cpu_seirhdage_n_state(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdage_n_state(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdage_n_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevax.cpp
cpp11::sexp dust_seirhdagevax_capabilities();
extern "C" SEXP _seir_dust_seirhdagevax_capabilities() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdagevax_capabilities());
  END_CPP11
}
// seirhdagevax.cpp
cpp11::sexp dust_seirhdagevax_gpu_info();
extern "C" SEXP _seir_dust_seirhdagevax_gpu_info() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdagevax_gpu_info());
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_alloc(cpp11::list r_pars, bool pars_multi, size_t step, cpp11::sexp r_n_particles, size_t n_threads, cpp11::sexp r_seed, bool deterministic, cpp11::sexp gpu_config);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_alloc(SEXP r_pars, SEXP pars_multi, SEXP step, SEXP r_n_particles, SEXP n_threads, SEXP r_seed, SEXP deterministic, SEXP gpu_config) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_alloc(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<bool>>(pars_multi), cpp11::as_cpp<cpp11::decay_t<size_t>>(step), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_n_particles), cpp11::as_cpp<cpp11::decay_t<size_t>>(n_threads), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_seed), cpp11::as_cpp<cpp11::decay_t<bool>>(deterministic), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(gpu_config)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_run(SEXP ptr, size_t step_end);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_run(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_run(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<size_t>>(step_end)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_simulate(SEXP ptr, cpp11::sexp step_end);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_simulate(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_simulate(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_end)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_set_index(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_set_index(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_set_index(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_update_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_pars), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_state), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_step), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_set_initial_state)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_state(SEXP ptr, SEXP r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_state(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_index)));
  END_CPP11
}
// seirhdagevax.cpp
size_t dust_cpu_seirhdagevax_step(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_step(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_step(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevax.cpp
void dust_cpu_seirhdagevax_reorder(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_reorder(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    dust_cpu_seirhdagevax_reorder(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index));
    return R_NilValue;
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_resample(SEXP ptr, cpp11::doubles r_weights);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_resample(SEXP ptr, SEXP r_weights) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_resample(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r_weights)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_rng_state(SEXP ptr, bool first_only, bool last_only);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_rng_state(SEXP ptr, SEXP first_only, SEXP last_only) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(first_only), cpp11::as_cpp<cpp11::decay_t<bool>>(last_only)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_set_rng_state(SEXP ptr, cpp11::raws rng_state);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_set_rng_state(SEXP ptr, SEXP rng_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_set_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(rng_state)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_set_data(SEXP ptr, cpp11::list data);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_set_data(SEXP ptr, SEXP data) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_set_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(data)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_compare_data(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_compare_data(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_compare_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevax.cpp
SEXP dust_cpu_seirhdagevax_filter(SEXP ptr, SEXP step_end, bool save_trajectories, cpp11::sexp step_snapshot, cpp11::sexp min_log_likelihood);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_filter(SEXP ptr, SEXP step_end, SEXP save_trajectories, SEXP step_snapshot, SEXP min_log_likelihood) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_filter(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(step_end), cpp11::as_cpp<cpp11::decay_t<bool>>(save_trajectories), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_snapshot), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(min_log_likelihood)));
  END_CPP11
}
// seirhdagevax.cpp
void dust_cpu_seirhdagevax_set_n_threads(SEXP ptr, int n_threads);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_set_n_threads(SEXP ptr, SEXP n_threads) {
  BEGIN_CPP11
    dust_cpu_seirhdagevax_set_n_threads(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<int>>(n_threads));
    return R_NilValue;
  END_CPP11
}
// seirhdagevax.cpp
int dust_cpu_seirhdagevax_n_state(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevax_n_state(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevax_n_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
cpp11::sexp dust_seirhdagevaxmultistrain_capabilities();
extern "C" SEXP _seir_dust_seirhdagevaxmultistrain_capabilities() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdagevaxmultistrain_capabilities());
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
cpp11::sexp dust_seirhdagevaxmultistrain_gpu_info();
extern "C" SEXP _seir_dust_seirhdagevaxmultistrain_gpu_info() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdagevaxmultistrain_gpu_info());
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_alloc(cpp11::list r_pars, bool pars_multi, size_t step, cpp11::sexp r_n_particles, size_t n_threads, cpp11::sexp r_seed, bool deterministic, cpp11::sexp gpu_config);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_alloc(SEXP r_pars, SEXP pars_multi, SEXP step, SEXP r_n_particles, SEXP n_threads, SEXP r_seed, SEXP deterministic, SEXP gpu_config) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_alloc(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<bool>>(pars_multi), cpp11::as_cpp<cpp11::decay_t<size_t>>(step), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_n_particles), cpp11::as_cpp<cpp11::decay_t<size_t>>(n_threads), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_seed), cpp11::as_cpp<cpp11::decay_t<bool>>(deterministic), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(gpu_config)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_run(SEXP ptr, size_t step_end);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_run(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_run(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<size_t>>(step_end)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_simulate(SEXP ptr, cpp11::sexp step_end);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_simulate(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_simulate(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_end)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_set_index(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_set_index(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_set_index(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_update_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_pars), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_state), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_step), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_set_initial_state)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_state(SEXP ptr, SEXP r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_state(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_index)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
size_t dust_cpu_seirhdagevaxmultistrain_step(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_step(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_step(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
void dust_cpu_seirhdagevaxmultistrain_reorder(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_reorder(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    dust_cpu_seirhdagevaxmultistrain_reorder(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index));
    return R_NilValue;
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_resample(SEXP ptr, cpp11::doubles r_weights);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_resample(SEXP ptr, SEXP r_weights) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_resample(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r_weights)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_rng_state(SEXP ptr, bool first_only, bool last_only);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_rng_state(SEXP ptr, SEXP first_only, SEXP last_only) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(first_only), cpp11::as_cpp<cpp11::decay_t<bool>>(last_only)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_set_rng_state(SEXP ptr, cpp11::raws rng_state);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_set_rng_state(SEXP ptr, SEXP rng_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_set_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(rng_state)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_set_data(SEXP ptr, cpp11::list data);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_set_data(SEXP ptr, SEXP data) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_set_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(data)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_compare_data(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_compare_data(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_compare_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
SEXP dust_cpu_seirhdagevaxmultistrain_filter(SEXP ptr, SEXP step_end, bool save_trajectories, cpp11::sexp step_snapshot, cpp11::sexp min_log_likelihood);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_filter(SEXP ptr, SEXP step_end, SEXP save_trajectories, SEXP step_snapshot, SEXP min_log_likelihood) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_filter(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(step_end), cpp11::as_cpp<cpp11::decay_t<bool>>(save_trajectories), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_snapshot), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(min_log_likelihood)));
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
void dust_cpu_seirhdagevaxmultistrain_set_n_threads(SEXP ptr, int n_threads);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_set_n_threads(SEXP ptr, SEXP n_threads) {
  BEGIN_CPP11
    dust_cpu_seirhdagevaxmultistrain_set_n_threads(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<int>>(n_threads));
    return R_NilValue;
  END_CPP11
}
// seirhdagevaxmultistrain.cpp
int dust_cpu_seirhdagevaxmultistrain_n_state(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrain_n_state(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrain_n_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
cpp11::sexp dust_seirhdagevaxmultistrainsero_capabilities();
extern "C" SEXP _seir_dust_seirhdagevaxmultistrainsero_capabilities() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdagevaxmultistrainsero_capabilities());
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
cpp11::sexp dust_seirhdagevaxmultistrainsero_gpu_info();
extern "C" SEXP _seir_dust_seirhdagevaxmultistrainsero_gpu_info() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdagevaxmultistrainsero_gpu_info());
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_alloc(cpp11::list r_pars, bool pars_multi, size_t step, cpp11::sexp r_n_particles, size_t n_threads, cpp11::sexp r_seed, bool deterministic, cpp11::sexp gpu_config);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_alloc(SEXP r_pars, SEXP pars_multi, SEXP step, SEXP r_n_particles, SEXP n_threads, SEXP r_seed, SEXP deterministic, SEXP gpu_config) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_alloc(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<bool>>(pars_multi), cpp11::as_cpp<cpp11::decay_t<size_t>>(step), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_n_particles), cpp11::as_cpp<cpp11::decay_t<size_t>>(n_threads), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_seed), cpp11::as_cpp<cpp11::decay_t<bool>>(deterministic), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(gpu_config)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_run(SEXP ptr, size_t step_end);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_run(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_run(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<size_t>>(step_end)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_simulate(SEXP ptr, cpp11::sexp step_end);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_simulate(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_simulate(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_end)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_set_index(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_set_index(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_set_index(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_update_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_pars), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_state), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_step), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_set_initial_state)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_state(SEXP ptr, SEXP r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_state(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_index)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
size_t dust_cpu_seirhdagevaxmultistrainsero_step(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_step(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_step(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
void dust_cpu_seirhdagevaxmultistrainsero_reorder(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_reorder(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    dust_cpu_seirhdagevaxmultistrainsero_reorder(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index));
    return R_NilValue;
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_resample(SEXP ptr, cpp11::doubles r_weights);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_resample(SEXP ptr, SEXP r_weights) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_resample(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r_weights)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_rng_state(SEXP ptr, bool first_only, bool last_only);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_rng_state(SEXP ptr, SEXP first_only, SEXP last_only) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(first_only), cpp11::as_cpp<cpp11::decay_t<bool>>(last_only)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_set_rng_state(SEXP ptr, cpp11::raws rng_state);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_set_rng_state(SEXP ptr, SEXP rng_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_set_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(rng_state)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_set_data(SEXP ptr, cpp11::list data);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_set_data(SEXP ptr, SEXP data) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_set_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(data)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_compare_data(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_compare_data(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_compare_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
SEXP dust_cpu_seirhdagevaxmultistrainsero_filter(SEXP ptr, SEXP step_end, bool save_trajectories, cpp11::sexp step_snapshot, cpp11::sexp min_log_likelihood);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_filter(SEXP ptr, SEXP step_end, SEXP save_trajectories, SEXP step_snapshot, SEXP min_log_likelihood) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_filter(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(step_end), cpp11::as_cpp<cpp11::decay_t<bool>>(save_trajectories), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_snapshot), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(min_log_likelihood)));
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
void dust_cpu_seirhdagevaxmultistrainsero_set_n_threads(SEXP ptr, int n_threads);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_set_n_threads(SEXP ptr, SEXP n_threads) {
  BEGIN_CPP11
    dust_cpu_seirhdagevaxmultistrainsero_set_n_threads(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<int>>(n_threads));
    return R_NilValue;
  END_CPP11
}
// seirhdagevaxmultistrainsero.cpp
int dust_cpu_seirhdagevaxmultistrainsero_n_state(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainsero_n_state(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainsero_n_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
cpp11::sexp dust_seirhdagevaxmultistrainserotimedepbeta_capabilities();
extern "C" SEXP _seir_dust_seirhdagevaxmultistrainserotimedepbeta_capabilities() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdagevaxmultistrainserotimedepbeta_capabilities());
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
cpp11::sexp dust_seirhdagevaxmultistrainserotimedepbeta_gpu_info();
extern "C" SEXP _seir_dust_seirhdagevaxmultistrainserotimedepbeta_gpu_info() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_seirhdagevaxmultistrainserotimedepbeta_gpu_info());
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_alloc(cpp11::list r_pars, bool pars_multi, size_t step, cpp11::sexp r_n_particles, size_t n_threads, cpp11::sexp r_seed, bool deterministic, cpp11::sexp gpu_config);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_alloc(SEXP r_pars, SEXP pars_multi, SEXP step, SEXP r_n_particles, SEXP n_threads, SEXP r_seed, SEXP deterministic, SEXP gpu_config) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_alloc(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<bool>>(pars_multi), cpp11::as_cpp<cpp11::decay_t<size_t>>(step), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_n_particles), cpp11::as_cpp<cpp11::decay_t<size_t>>(n_threads), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_seed), cpp11::as_cpp<cpp11::decay_t<bool>>(deterministic), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(gpu_config)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_run(SEXP ptr, size_t step_end);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_run(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_run(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<size_t>>(step_end)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_simulate(SEXP ptr, cpp11::sexp step_end);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_simulate(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_simulate(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_end)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_index(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_index(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_index(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_update_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_pars), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_state), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_step), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_set_initial_state)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_state(SEXP ptr, SEXP r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_state(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_index)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
size_t dust_cpu_seirhdagevaxmultistrainserotimedepbeta_step(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_step(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_step(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
void dust_cpu_seirhdagevaxmultistrainserotimedepbeta_reorder(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_reorder(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    dust_cpu_seirhdagevaxmultistrainserotimedepbeta_reorder(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index));
    return R_NilValue;
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_resample(SEXP ptr, cpp11::doubles r_weights);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_resample(SEXP ptr, SEXP r_weights) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_resample(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r_weights)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_rng_state(SEXP ptr, bool first_only, bool last_only);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_rng_state(SEXP ptr, SEXP first_only, SEXP last_only) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(first_only), cpp11::as_cpp<cpp11::decay_t<bool>>(last_only)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_rng_state(SEXP ptr, cpp11::raws rng_state);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_rng_state(SEXP ptr, SEXP rng_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(rng_state)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_data(SEXP ptr, cpp11::list data);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_data(SEXP ptr, SEXP data) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(data)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_compare_data(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_compare_data(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_compare_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
SEXP dust_cpu_seirhdagevaxmultistrainserotimedepbeta_filter(SEXP ptr, SEXP step_end, bool save_trajectories, cpp11::sexp step_snapshot, cpp11::sexp min_log_likelihood);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_filter(SEXP ptr, SEXP step_end, SEXP save_trajectories, SEXP step_snapshot, SEXP min_log_likelihood) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_filter(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(step_end), cpp11::as_cpp<cpp11::decay_t<bool>>(save_trajectories), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_snapshot), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(min_log_likelihood)));
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
void dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_n_threads(SEXP ptr, int n_threads);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_n_threads(SEXP ptr, SEXP n_threads) {
  BEGIN_CPP11
    dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_n_threads(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<int>>(n_threads));
    return R_NilValue;
  END_CPP11
}
// seirhdagevaxmultistrainserotimedepbeta.cpp
int dust_cpu_seirhdagevaxmultistrainserotimedepbeta_n_state(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_n_state(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_seirhdagevaxmultistrainserotimedepbeta_n_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// sir.cpp
cpp11::sexp dust_sir_capabilities();
extern "C" SEXP _seir_dust_sir_capabilities() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_sir_capabilities());
  END_CPP11
}
// sir.cpp
cpp11::sexp dust_sir_gpu_info();
extern "C" SEXP _seir_dust_sir_gpu_info() {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_sir_gpu_info());
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_alloc(cpp11::list r_pars, bool pars_multi, size_t step, cpp11::sexp r_n_particles, size_t n_threads, cpp11::sexp r_seed, bool deterministic, cpp11::sexp gpu_config);
extern "C" SEXP _seir_dust_cpu_sir_alloc(SEXP r_pars, SEXP pars_multi, SEXP step, SEXP r_n_particles, SEXP n_threads, SEXP r_seed, SEXP deterministic, SEXP gpu_config) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_alloc(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<bool>>(pars_multi), cpp11::as_cpp<cpp11::decay_t<size_t>>(step), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_n_particles), cpp11::as_cpp<cpp11::decay_t<size_t>>(n_threads), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_seed), cpp11::as_cpp<cpp11::decay_t<bool>>(deterministic), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(gpu_config)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_run(SEXP ptr, size_t step_end);
extern "C" SEXP _seir_dust_cpu_sir_run(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_run(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<size_t>>(step_end)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_simulate(SEXP ptr, cpp11::sexp step_end);
extern "C" SEXP _seir_dust_cpu_sir_simulate(SEXP ptr, SEXP step_end) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_simulate(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_end)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_set_index(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_sir_set_index(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_set_index(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state);
extern "C" SEXP _seir_dust_cpu_sir_update_state(SEXP ptr, SEXP r_pars, SEXP r_state, SEXP r_step, SEXP r_set_initial_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_update_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_pars), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_state), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_step), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_set_initial_state)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_state(SEXP ptr, SEXP r_index);
extern "C" SEXP _seir_dust_cpu_sir_state(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(r_index)));
  END_CPP11
}
// sir.cpp
size_t dust_cpu_sir_step(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_sir_step(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_step(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// sir.cpp
void dust_cpu_sir_reorder(SEXP ptr, cpp11::sexp r_index);
extern "C" SEXP _seir_dust_cpu_sir_reorder(SEXP ptr, SEXP r_index) {
  BEGIN_CPP11
    dust_cpu_sir_reorder(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_index));
    return R_NilValue;
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_resample(SEXP ptr, cpp11::doubles r_weights);
extern "C" SEXP _seir_dust_cpu_sir_resample(SEXP ptr, SEXP r_weights) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_resample(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(r_weights)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_rng_state(SEXP ptr, bool first_only, bool last_only);
extern "C" SEXP _seir_dust_cpu_sir_rng_state(SEXP ptr, SEXP first_only, SEXP last_only) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(first_only), cpp11::as_cpp<cpp11::decay_t<bool>>(last_only)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_set_rng_state(SEXP ptr, cpp11::raws rng_state);
extern "C" SEXP _seir_dust_cpu_sir_set_rng_state(SEXP ptr, SEXP rng_state) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_set_rng_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::raws>>(rng_state)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_set_data(SEXP ptr, cpp11::list data);
extern "C" SEXP _seir_dust_cpu_sir_set_data(SEXP ptr, SEXP data) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_set_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(data)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_compare_data(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_sir_compare_data(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_compare_data(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}
// sir.cpp
SEXP dust_cpu_sir_filter(SEXP ptr, SEXP step_end, bool save_trajectories, cpp11::sexp step_snapshot, cpp11::sexp min_log_likelihood);
extern "C" SEXP _seir_dust_cpu_sir_filter(SEXP ptr, SEXP step_end, SEXP save_trajectories, SEXP step_snapshot, SEXP min_log_likelihood) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_filter(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<SEXP>>(step_end), cpp11::as_cpp<cpp11::decay_t<bool>>(save_trajectories), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(step_snapshot), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(min_log_likelihood)));
  END_CPP11
}
// sir.cpp
void dust_cpu_sir_set_n_threads(SEXP ptr, int n_threads);
extern "C" SEXP _seir_dust_cpu_sir_set_n_threads(SEXP ptr, SEXP n_threads) {
  BEGIN_CPP11
    dust_cpu_sir_set_n_threads(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr), cpp11::as_cpp<cpp11::decay_t<int>>(n_threads));
    return R_NilValue;
  END_CPP11
}
// sir.cpp
int dust_cpu_sir_n_state(SEXP ptr);
extern "C" SEXP _seir_dust_cpu_sir_n_state(SEXP ptr) {
  BEGIN_CPP11
    return cpp11::as_sexp(dust_cpu_sir_n_state(cpp11::as_cpp<cpp11::decay_t<SEXP>>(ptr)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_seir_dust_cpu_seir_alloc",                                           (DL_FUNC) &_seir_dust_cpu_seir_alloc,                                           8},
    {"_seir_dust_cpu_seir_compare_data",                                    (DL_FUNC) &_seir_dust_cpu_seir_compare_data,                                    1},
    {"_seir_dust_cpu_seir_filter",                                          (DL_FUNC) &_seir_dust_cpu_seir_filter,                                          5},
    {"_seir_dust_cpu_seir_n_state",                                         (DL_FUNC) &_seir_dust_cpu_seir_n_state,                                         1},
    {"_seir_dust_cpu_seir_reorder",                                         (DL_FUNC) &_seir_dust_cpu_seir_reorder,                                         2},
    {"_seir_dust_cpu_seir_resample",                                        (DL_FUNC) &_seir_dust_cpu_seir_resample,                                        2},
    {"_seir_dust_cpu_seir_rng_state",                                       (DL_FUNC) &_seir_dust_cpu_seir_rng_state,                                       3},
    {"_seir_dust_cpu_seir_run",                                             (DL_FUNC) &_seir_dust_cpu_seir_run,                                             2},
    {"_seir_dust_cpu_seir_set_data",                                        (DL_FUNC) &_seir_dust_cpu_seir_set_data,                                        2},
    {"_seir_dust_cpu_seir_set_index",                                       (DL_FUNC) &_seir_dust_cpu_seir_set_index,                                       2},
    {"_seir_dust_cpu_seir_set_n_threads",                                   (DL_FUNC) &_seir_dust_cpu_seir_set_n_threads,                                   2},
    {"_seir_dust_cpu_seir_set_rng_state",                                   (DL_FUNC) &_seir_dust_cpu_seir_set_rng_state,                                   2},
    {"_seir_dust_cpu_seir_simulate",                                        (DL_FUNC) &_seir_dust_cpu_seir_simulate,                                        2},
    {"_seir_dust_cpu_seir_state",                                           (DL_FUNC) &_seir_dust_cpu_seir_state,                                           2},
    {"_seir_dust_cpu_seir_step",                                            (DL_FUNC) &_seir_dust_cpu_seir_step,                                            1},
    {"_seir_dust_cpu_seir_update_state",                                    (DL_FUNC) &_seir_dust_cpu_seir_update_state,                                    5},
    {"_seir_dust_cpu_seirdage_alloc",                                       (DL_FUNC) &_seir_dust_cpu_seirdage_alloc,                                       8},
    {"_seir_dust_cpu_seirdage_compare_data",                                (DL_FUNC) &_seir_dust_cpu_seirdage_compare_data,                                1},
    {"_seir_dust_cpu_seirdage_filter",                                      (DL_FUNC) &_seir_dust_cpu_seirdage_filter,                                      5},
    {"_seir_dust_cpu_seirdage_n_state",                                     (DL_FUNC) &_seir_dust_cpu_seirdage_n_state,                                     1},
    {"_seir_dust_cpu_seirdage_reorder",                                     (DL_FUNC) &_seir_dust_cpu_seirdage_reorder,                                     2},
    {"_seir_dust_cpu_seirdage_resample",                                    (DL_FUNC) &_seir_dust_cpu_seirdage_resample,                                    2},
    {"_seir_dust_cpu_seirdage_rng_state",                                   (DL_FUNC) &_seir_dust_cpu_seirdage_rng_state,                                   3},
    {"_seir_dust_cpu_seirdage_run",                                         (DL_FUNC) &_seir_dust_cpu_seirdage_run,                                         2},
    {"_seir_dust_cpu_seirdage_set_data",                                    (DL_FUNC) &_seir_dust_cpu_seirdage_set_data,                                    2},
    {"_seir_dust_cpu_seirdage_set_index",                                   (DL_FUNC) &_seir_dust_cpu_seirdage_set_index,                                   2},
    {"_seir_dust_cpu_seirdage_set_n_threads",                               (DL_FUNC) &_seir_dust_cpu_seirdage_set_n_threads,                               2},
    {"_seir_dust_cpu_seirdage_set_rng_state",                               (DL_FUNC) &_seir_dust_cpu_seirdage_set_rng_state,                               2},
    {"_seir_dust_cpu_seirdage_simulate",                                    (DL_FUNC) &_seir_dust_cpu_seirdage_simulate,                                    2},
    {"_seir_dust_cpu_seirdage_state",                                       (DL_FUNC) &_seir_dust_cpu_seirdage_state,                                       2},
    {"_seir_dust_cpu_seirdage_step",                                        (DL_FUNC) &_seir_dust_cpu_seirdage_step,                                        1},
    {"_seir_dust_cpu_seirdage_update_state",                                (DL_FUNC) &_seir_dust_cpu_seirdage_update_state,                                5},
    {"_seir_dust_cpu_seirhdage_alloc",                                      (DL_FUNC) &_seir_dust_cpu_seirhdage_alloc,                                      8},
    {"_seir_dust_cpu_seirhdage_compare_data",                               (DL_FUNC) &_seir_dust_cpu_seirhdage_compare_data,                               1},
    {"_seir_dust_cpu_seirhdage_filter",                                     (DL_FUNC) &_seir_dust_cpu_seirhdage_filter,                                     5},
    {"_seir_dust_cpu_seirhdage_n_state",                                    (DL_FUNC) &_seir_dust_cpu_seirhdage_n_state,                                    1},
    {"_seir_dust_cpu_seirhdage_reorder",                                    (DL_FUNC) &_seir_dust_cpu_seirhdage_reorder,                                    2},
    {"_seir_dust_cpu_seirhdage_resample",                                   (DL_FUNC) &_seir_dust_cpu_seirhdage_resample,                                   2},
    {"_seir_dust_cpu_seirhdage_rng_state",                                  (DL_FUNC) &_seir_dust_cpu_seirhdage_rng_state,                                  3},
    {"_seir_dust_cpu_seirhdage_run",                                        (DL_FUNC) &_seir_dust_cpu_seirhdage_run,                                        2},
    {"_seir_dust_cpu_seirhdage_set_data",                                   (DL_FUNC) &_seir_dust_cpu_seirhdage_set_data,                                   2},
    {"_seir_dust_cpu_seirhdage_set_index",                                  (DL_FUNC) &_seir_dust_cpu_seirhdage_set_index,                                  2},
    {"_seir_dust_cpu_seirhdage_set_n_threads",                              (DL_FUNC) &_seir_dust_cpu_seirhdage_set_n_threads,                              2},
    {"_seir_dust_cpu_seirhdage_set_rng_state",                              (DL_FUNC) &_seir_dust_cpu_seirhdage_set_rng_state,                              2},
    {"_seir_dust_cpu_seirhdage_simulate",                                   (DL_FUNC) &_seir_dust_cpu_seirhdage_simulate,                                   2},
    {"_seir_dust_cpu_seirhdage_state",                                      (DL_FUNC) &_seir_dust_cpu_seirhdage_state,                                      2},
    {"_seir_dust_cpu_seirhdage_step",                                       (DL_FUNC) &_seir_dust_cpu_seirhdage_step,                                       1},
    {"_seir_dust_cpu_seirhdage_update_state",                               (DL_FUNC) &_seir_dust_cpu_seirhdage_update_state,                               5},
    {"_seir_dust_cpu_seirhdagevax_alloc",                                   (DL_FUNC) &_seir_dust_cpu_seirhdagevax_alloc,                                   8},
    {"_seir_dust_cpu_seirhdagevax_compare_data",                            (DL_FUNC) &_seir_dust_cpu_seirhdagevax_compare_data,                            1},
    {"_seir_dust_cpu_seirhdagevax_filter",                                  (DL_FUNC) &_seir_dust_cpu_seirhdagevax_filter,                                  5},
    {"_seir_dust_cpu_seirhdagevax_n_state",                                 (DL_FUNC) &_seir_dust_cpu_seirhdagevax_n_state,                                 1},
    {"_seir_dust_cpu_seirhdagevax_reorder",                                 (DL_FUNC) &_seir_dust_cpu_seirhdagevax_reorder,                                 2},
    {"_seir_dust_cpu_seirhdagevax_resample",                                (DL_FUNC) &_seir_dust_cpu_seirhdagevax_resample,                                2},
    {"_seir_dust_cpu_seirhdagevax_rng_state",                               (DL_FUNC) &_seir_dust_cpu_seirhdagevax_rng_state,                               3},
    {"_seir_dust_cpu_seirhdagevax_run",                                     (DL_FUNC) &_seir_dust_cpu_seirhdagevax_run,                                     2},
    {"_seir_dust_cpu_seirhdagevax_set_data",                                (DL_FUNC) &_seir_dust_cpu_seirhdagevax_set_data,                                2},
    {"_seir_dust_cpu_seirhdagevax_set_index",                               (DL_FUNC) &_seir_dust_cpu_seirhdagevax_set_index,                               2},
    {"_seir_dust_cpu_seirhdagevax_set_n_threads",                           (DL_FUNC) &_seir_dust_cpu_seirhdagevax_set_n_threads,                           2},
    {"_seir_dust_cpu_seirhdagevax_set_rng_state",                           (DL_FUNC) &_seir_dust_cpu_seirhdagevax_set_rng_state,                           2},
    {"_seir_dust_cpu_seirhdagevax_simulate",                                (DL_FUNC) &_seir_dust_cpu_seirhdagevax_simulate,                                2},
    {"_seir_dust_cpu_seirhdagevax_state",                                   (DL_FUNC) &_seir_dust_cpu_seirhdagevax_state,                                   2},
    {"_seir_dust_cpu_seirhdagevax_step",                                    (DL_FUNC) &_seir_dust_cpu_seirhdagevax_step,                                    1},
    {"_seir_dust_cpu_seirhdagevax_update_state",                            (DL_FUNC) &_seir_dust_cpu_seirhdagevax_update_state,                            5},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_alloc",                        (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_alloc,                        8},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_compare_data",                 (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_compare_data,                 1},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_filter",                       (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_filter,                       5},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_n_state",                      (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_n_state,                      1},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_reorder",                      (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_reorder,                      2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_resample",                     (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_resample,                     2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_rng_state",                    (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_rng_state,                    3},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_run",                          (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_run,                          2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_set_data",                     (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_set_data,                     2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_set_index",                    (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_set_index,                    2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_set_n_threads",                (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_set_n_threads,                2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_set_rng_state",                (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_set_rng_state,                2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_simulate",                     (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_simulate,                     2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_state",                        (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_state,                        2},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_step",                         (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_step,                         1},
    {"_seir_dust_cpu_seirhdagevaxmultistrain_update_state",                 (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrain_update_state,                 5},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_alloc",                    (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_alloc,                    8},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_compare_data",             (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_compare_data,             1},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_filter",                   (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_filter,                   5},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_n_state",                  (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_n_state,                  1},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_reorder",                  (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_reorder,                  2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_resample",                 (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_resample,                 2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_rng_state",                (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_rng_state,                3},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_run",                      (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_run,                      2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_set_data",                 (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_set_data,                 2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_set_index",                (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_set_index,                2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_set_n_threads",            (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_set_n_threads,            2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_set_rng_state",            (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_set_rng_state,            2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_simulate",                 (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_simulate,                 2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_state",                    (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_state,                    2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_step",                     (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_step,                     1},
    {"_seir_dust_cpu_seirhdagevaxmultistrainsero_update_state",             (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainsero_update_state,             5},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_alloc",         (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_alloc,         8},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_compare_data",  (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_compare_data,  1},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_filter",        (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_filter,        5},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_n_state",       (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_n_state,       1},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_reorder",       (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_reorder,       2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_resample",      (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_resample,      2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_rng_state",     (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_rng_state,     3},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_run",           (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_run,           2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_data",      (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_data,      2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_index",     (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_index,     2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_n_threads", (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_n_threads, 2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_rng_state", (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_set_rng_state, 2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_simulate",      (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_simulate,      2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_state",         (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_state,         2},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_step",          (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_step,          1},
    {"_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_update_state",  (DL_FUNC) &_seir_dust_cpu_seirhdagevaxmultistrainserotimedepbeta_update_state,  5},
    {"_seir_dust_cpu_sir_alloc",                                            (DL_FUNC) &_seir_dust_cpu_sir_alloc,                                            8},
    {"_seir_dust_cpu_sir_compare_data",                                     (DL_FUNC) &_seir_dust_cpu_sir_compare_data,                                     1},
    {"_seir_dust_cpu_sir_filter",                                           (DL_FUNC) &_seir_dust_cpu_sir_filter,                                           5},
    {"_seir_dust_cpu_sir_n_state",                                          (DL_FUNC) &_seir_dust_cpu_sir_n_state,                                          1},
    {"_seir_dust_cpu_sir_reorder",                                          (DL_FUNC) &_seir_dust_cpu_sir_reorder,                                          2},
    {"_seir_dust_cpu_sir_resample",                                         (DL_FUNC) &_seir_dust_cpu_sir_resample,                                         2},
    {"_seir_dust_cpu_sir_rng_state",                                        (DL_FUNC) &_seir_dust_cpu_sir_rng_state,                                        3},
    {"_seir_dust_cpu_sir_run",                                              (DL_FUNC) &_seir_dust_cpu_sir_run,                                              2},
    {"_seir_dust_cpu_sir_set_data",                                         (DL_FUNC) &_seir_dust_cpu_sir_set_data,                                         2},
    {"_seir_dust_cpu_sir_set_index",                                        (DL_FUNC) &_seir_dust_cpu_sir_set_index,                                        2},
    {"_seir_dust_cpu_sir_set_n_threads",                                    (DL_FUNC) &_seir_dust_cpu_sir_set_n_threads,                                    2},
    {"_seir_dust_cpu_sir_set_rng_state",                                    (DL_FUNC) &_seir_dust_cpu_sir_set_rng_state,                                    2},
    {"_seir_dust_cpu_sir_simulate",                                         (DL_FUNC) &_seir_dust_cpu_sir_simulate,                                         2},
    {"_seir_dust_cpu_sir_state",                                            (DL_FUNC) &_seir_dust_cpu_sir_state,                                            2},
    {"_seir_dust_cpu_sir_step",                                             (DL_FUNC) &_seir_dust_cpu_sir_step,                                             1},
    {"_seir_dust_cpu_sir_update_state",                                     (DL_FUNC) &_seir_dust_cpu_sir_update_state,                                     5},
    {"_seir_dust_seir_capabilities",                                        (DL_FUNC) &_seir_dust_seir_capabilities,                                        0},
    {"_seir_dust_seir_gpu_info",                                            (DL_FUNC) &_seir_dust_seir_gpu_info,                                            0},
    {"_seir_dust_seirdage_capabilities",                                    (DL_FUNC) &_seir_dust_seirdage_capabilities,                                    0},
    {"_seir_dust_seirdage_gpu_info",                                        (DL_FUNC) &_seir_dust_seirdage_gpu_info,                                        0},
    {"_seir_dust_seirhdage_capabilities",                                   (DL_FUNC) &_seir_dust_seirhdage_capabilities,                                   0},
    {"_seir_dust_seirhdage_gpu_info",                                       (DL_FUNC) &_seir_dust_seirhdage_gpu_info,                                       0},
    {"_seir_dust_seirhdagevax_capabilities",                                (DL_FUNC) &_seir_dust_seirhdagevax_capabilities,                                0},
    {"_seir_dust_seirhdagevax_gpu_info",                                    (DL_FUNC) &_seir_dust_seirhdagevax_gpu_info,                                    0},
    {"_seir_dust_seirhdagevaxmultistrain_capabilities",                     (DL_FUNC) &_seir_dust_seirhdagevaxmultistrain_capabilities,                     0},
    {"_seir_dust_seirhdagevaxmultistrain_gpu_info",                         (DL_FUNC) &_seir_dust_seirhdagevaxmultistrain_gpu_info,                         0},
    {"_seir_dust_seirhdagevaxmultistrainsero_capabilities",                 (DL_FUNC) &_seir_dust_seirhdagevaxmultistrainsero_capabilities,                 0},
    {"_seir_dust_seirhdagevaxmultistrainsero_gpu_info",                     (DL_FUNC) &_seir_dust_seirhdagevaxmultistrainsero_gpu_info,                     0},
    {"_seir_dust_seirhdagevaxmultistrainserotimedepbeta_capabilities",      (DL_FUNC) &_seir_dust_seirhdagevaxmultistrainserotimedepbeta_capabilities,      0},
    {"_seir_dust_seirhdagevaxmultistrainserotimedepbeta_gpu_info",          (DL_FUNC) &_seir_dust_seirhdagevaxmultistrainserotimedepbeta_gpu_info,          0},
    {"_seir_dust_sir_capabilities",                                         (DL_FUNC) &_seir_dust_sir_capabilities,                                         0},
    {"_seir_dust_sir_gpu_info",                                             (DL_FUNC) &_seir_dust_sir_gpu_info,                                             0},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_seir(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
